(()=>{"use strict";var e={formSelector:".form",inputSelector:".form__input",submittingButtonSelector:".form__submit",inputErrorSelector:".error",submittingButtonInvalid:"form__submit_invalid",inputInvalid:"form__input_invalid",errorVisible:"error_visible"};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function r(e,t,n){return(t=o(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,n);if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"===t(n)?n:String(n)}var i=function(){function e(t,n,o,i,a,l,u){var c=this,s=a.owned,f=a.userId,p=l.handleImageClick,y=l.handleDeletionClick,h=u.api;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_toggleLike",(function(){c._likeBtn.classList.contains("element__like_active")?c._api.unlikeCard(c._id).then((function(e){c._likeBtn.classList.remove("element__like_active"),c._likesCount=e.likes.length,c._setLikeCount()})).catch((function(e){console.log(e)})):c._api.likeCard(c._id).then((function(e){c._likeBtn.classList.add("element__like_active"),c._likesCount=e.likes.length,c._setLikeCount()})).catch((function(e){console.log(e)}))})),r(this,"_clickRemove",(function(){c._handleDeletionClick(c._id)})),this._title=t,this._url=n,this._id=o,this._likes=i,this._likesCount=i.length,this._owned=s,this._userId=f,this._api=h,this._templateSelector=".template",this._template=document.querySelector(this._templateSelector).content,this._card=this._template.querySelector(".element").cloneNode(!0),this._text=this._card.querySelector(".element__title"),this._img=this._card.querySelector(".element__image"),this._removeBtn=this._card.querySelector(".element__remove"),this._likeBtn=this._card.querySelector(".element__like"),this._likeCount=this._card.querySelector(".element__like-count"),this._handleImageClick=p,this._handleDeletionClick=y}var t,o;return t=e,(o=[{key:"_createCard",value:function(){this._setEventListeners(),this._insertData(),this._setLikeCount(),this._toggleDeleteBtnIfOwned(),this._checkIfLiked()}},{key:"_setEventListeners",value:function(){var e=this;this._img.addEventListener("click",(function(){e._handleImageClick(e._img.src,e._img.alt,e._text.textContent)})),this._likeBtn.addEventListener("click",this._toggleLike),this._removeBtn.addEventListener("click",this._clickRemove)}},{key:"_checkIfLiked",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._userId&&e._blackenLike()}))}},{key:"_blackenLike",value:function(){this._likeBtn.classList.add("element__like_active")}},{key:"_setLikeCount",value:function(){this._likesCount>0?(this._likeCount.style.display="block",this._likeCount.textContent=this._likesCount):this._likeCount.style.display="none"}},{key:"_toggleDeleteBtnIfOwned",value:function(){this._owned?this._removeBtn.style.display="block":this._removeBtn.style.display="none"}},{key:"deleteCard",value:function(){this._card.remove(),this._template=null,this._card=null}},{key:"_insertData",value:function(){this._img.src=this._url,this._img.alt=this._title,this._text.textContent=this._title}},{key:"getCard",value:function(){return this._createCard(),this._card}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==a(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===a(o)?o:String(o)),r)}var o}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationData=t,this._validationObject=n,this._submittingButton=this._validationObject.querySelector(this._validationData.submittingButtonSelector),this._inputList=Array.from(this._validationObject.querySelectorAll(this._validationData.inputSelector))}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListener()}},{key:"validateOnOpen",value:function(){var e=this;this._inputList.every((function(e){return""===e.value}))?this._toggleSubmitState():(this._toggleSubmitState(),this._inputList.forEach((function(t){e._checkInputValidity(t)})))}},{key:"_setEventListener",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitState()}))}))}},{key:"_showInputError",value:function(e,t){var n=this._validationObject.querySelector("#".concat(e.name,"-error"));e.classList.add(this._validationData.inputInvalid),n.classList.add(this._validationData.errorVisible),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._validationObject.querySelector("#".concat(e.name,"-error"));e.classList.remove(this._validationData.inputInvalid),t.classList.remove(this._validationData.errorVisible),t.textContent=""}},{key:"_toggleSubmitState",value:function(){this._checkIfAllInputIsValid()?(this._submittingButton.classList.remove(this._validationData.submittingButtonInvalid),this._submittingButton.removeAttribute("disabled")):(this._submittingButton.classList.add(this._validationData.submittingButtonInvalid),this._submittingButton.setAttribute("disabled",!0))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_checkIfAllInputIsValid",value:function(){return this._inputList.every((function(e){return e.validity.valid}))}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===c(o)?o:String(o)),r)}var o}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(this._selector),this._popupCloseBtn=this._popup.querySelector(".popup__close-btn"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close()})),this._popupCloseBtn.addEventListener("click",(function(){e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===p(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function _(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._img=t._popup.querySelector(".popup__image"),t._text=t._popup.querySelector(".popup__text"),t}return t=a,(n=[{key:"open",value:function(e,t,n){this._img.src=e,this._img.alt=t,this._text.textContent=n,h(b(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function g(e){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},g(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==g(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===g(o)?o:String(o)),r)}var o}var S=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){"top"===t?this._container.prepend(e):this._container.append(e)}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===w(o)?o:String(o)),r)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function P(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n,r=t.openCallback,o=t.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._openCallback=r,n._submitCallback=o,n._form=n._popup.querySelector(".form"),n._formInputs=n._form.querySelectorAll(".form__input"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;j(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),t.stopImmediatePropagation(),e._submitCallback(e._getInputValues())}))}},{key:"changeSumbitHandler",value:function(e){this._submitCallback=e}},{key:"open",value:function(){j(I(a.prototype),"open",this).call(this),this._openCallback()}},{key:"close",value:function(){this._form.reset(),j(I(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var e={};return this._formInputs.forEach((function(t){var n=t.name,r=t.value;e[n]=r})),e}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===q(o)?o:String(o)),r)}var o}var x=function(){function e(t){var n=t.profileNameSel,r=t.profileJobSel,o=t.profileImageSel;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(n),this._profileJob=document.querySelector(r),this._profileImg=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileJob.textContent=e.job}},{key:"setUserImage",value:function(e){this._profileImg.src=e}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===R(o)?o:String(o)),r)}var o}var B=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._token=r.authorization}var t,n;return t=e,(n=[{key:"getProfileData",value:function(){return fetch("".concat(this._baseUrl,"/users/me/"),{headers:this._headers}).then(this._checkResponse)}},{key:"setProfileData",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.job})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards/"),{headers:this._headers}).then(this._checkResponse)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.place,link:e.url})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"unlikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"getProfileImage",value:function(){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfileImage",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject(e.status)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"a110f406-654f-4c53-bae6-3b8905b49b43","Content-Type":"application/json"}});function U(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var A="",V=document.querySelector(".profile__edit-btn"),N=document.querySelector(".profile__add-btn"),J=document.querySelector(".profile__avatar-box"),H=document.querySelector(".popup_type_edit-profile-img"),z=document.querySelector(".form__input_img"),M=document.querySelector(".form-edit-profile-img"),G=H.querySelector(".form__submit"),$=document.querySelector(".popup_type_edit-card"),F=$.querySelector(".form-edit"),K=$.querySelector(".form__input_field-name"),Q=$.querySelector(".form__input_field-job"),W=$.querySelector(".form__submit"),X=document.querySelector(".popup_type_add-card"),Y=X.querySelector(".form-add"),Z=X.querySelector(".form__submit"),ee=".elements",te=(document.querySelector(ee),new u(e,F)),ne=new u(e,Y),re=new u(e,M),oe=document.querySelector(".popup_type_delete-card").querySelector(".form__submit"),ie=null;te.enableValidation(),ne.enableValidation(),re.enableValidation();var ae=new x({profileNameSel:".profile__name",profileJobSel:".profile__job",profileImageSel:".profile__avatar"});Promise.all([B.getProfileData(),B.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,l=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw o}}return l}}(t,n)||function(e,t){if(e){if("string"==typeof e)return U(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ae.setUserInfo({name:o.name,job:o.about}),ae.setUserImage(o.avatar),A=o._id,function(e){(ie=new S({renderer:function(e){var t=e.owner._id===A,n=pe(e.name,e.link,e._id,e.likes,{owned:t,userId:A});ie.addItem(n,"bottom")}},ee)).renderItems(e)}(i)})).catch((function(e){console.log(e)}));var le=new L(".popup_type_edit-card",{openCallback:function(){var e=ae.getUserInfo();K.value=e.name,Q.value=e.job,te.validateOnOpen()},submitCallback:function(e){W.innerText="Сохранение...",B.setProfileData(e).then((function(){B.getProfileData().then((function(e){ae.setUserInfo({name:e.name,job:e.about})})).catch((function(e){console.log(e)})),le.close()})).catch((function(e){console.log(e)})).finally((function(e){W.innerText="Сохранить"}))}});le.setEventListeners();var ue=new L(".popup_type_add-card",{openCallback:function(){ne.validateOnOpen()},submitCallback:function(e){Z.innerText="Сохранение...",B.addNewCard({place:e.place,url:e.url}).then((function(e){var t=pe(e.name,e.link,e._id,e.likes,{owned:!0,userId:A});ie.addItem(t,"top"),ue.close()})).catch((function(e){console.log(e)})).finally((function(e){Z.innerText="Сохранить"}))}});ue.setEventListeners();var ce=new v(".popup_type_pic");ce.setEventListeners();var se=new L(".popup_type_delete-card",{openCallback:function(){},submitCallback:function(){console.log("New submit handler will be made")}});se.setEventListeners();var fe=new L(".popup_type_edit-profile-img",{openCallback:function(){re.validateOnOpen()},submitCallback:function(){G.innerText="Сохранение...",B.updateProfileImage(z.value).then((function(e){console.log(e),ae.setUserImage(e.avatar),fe.close()})).catch((function(e){console.log(e)})).finally((function(e){G.innerText="Сохранить"}))}});function pe(e,t,n,r,o){var a=o.owned,l=o.userId,u=new i(e,t,n,r,{owned:a,userId:l},{handleImageClick:function(e,t,n){ce.open(e,t,n)},handleDeletionClick:function(e){se.open(),se.changeSumbitHandler((function(){oe.innerText="Удаление...",B.deleteCard(e).then((function(){u.deleteCard(),se.close()})).catch((function(e){console.log(e)})).finally((function(){oe.innerText="Сохранить"}))}))}},{api:B});return u.getCard()}fe.setEventListeners(),V.addEventListener("click",(function(){le.open()})),N.addEventListener("click",(function(){ue.open()})),J.addEventListener("click",(function(){fe.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,