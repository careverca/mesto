(()=>{"use strict";var e={formSelector:".form",inputSelector:".form__input",submittingButtonSelector:".form__submit",inputErrorSelector:".error",submittingButtonInvalid:"form__submit_invalid",inputInvalid:"form__input_invalid",errorVisible:"error_visible"};function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},t(e)}function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function r(e,t,n){return(t=o(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e){var n=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,n);if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"===t(n)?n:String(n)}var i=function(){function e(t,n,o,i,a,l,u){var c=this,s=a.owned,f=a.userId,p=l.handleImageClick,y=l.handleDeletionClick,h=u.api;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_toggleLike",(function(){c._likeBtn.classList.contains("element__like_active")?c._api.unlikeCard(c._id).then((function(e){c._likeBtn.classList.remove("element__like_active"),c._likesCount=e.likes.length,c._setLikeCount()})):c._api.likeCard(c._id).then((function(e){c._likeBtn.classList.add("element__like_active"),c._likesCount=e.likes.length,c._setLikeCount()}))})),r(this,"_clickRemove",(function(){c._handleDeletionClick(c._id)})),this._title=t,this._url=n,this._id=o,this._likes=i,this._likesCount=i.length,this._owned=s,this._userId=f,this._api=h,this._templateSelector=".template",this._template=document.querySelector(this._templateSelector).content,this._card=this._template.querySelector(".element").cloneNode(!0),this._text=this._card.querySelector(".element__title"),this._img=this._card.querySelector(".element__image"),this._removeBtn=this._card.querySelector(".element__remove"),this._likeBtn=this._card.querySelector(".element__like"),this._likeCount=this._card.querySelector(".element__like-count"),this._handleImageClick=p,this._handleDeletionClick=y}var t,o;return t=e,(o=[{key:"_createCard",value:function(){this._setEventListeners(),this._insertData(),this._setLikeCount(),this._toggleDeleteBtnIfOwned(),this._checkIfLiked()}},{key:"_setEventListeners",value:function(){var e=this;this._img.addEventListener("click",(function(){e._handleImageClick(e._img.src,e._img.alt,e._text.textContent)})),this._likeBtn.addEventListener("click",this._toggleLike),this._removeBtn.addEventListener("click",this._clickRemove)}},{key:"_checkIfLiked",value:function(){var e=this;this._likes.forEach((function(t){t._id===e._userId&&e._blackenLike()}))}},{key:"_blackenLike",value:function(){this._likeBtn.classList.add("element__like_active")}},{key:"_setLikeCount",value:function(){this._likesCount>0?(this._likeCount.style.display="block",this._likeCount.textContent=this._likesCount):this._likeCount.style.display="none"}},{key:"_toggleDeleteBtnIfOwned",value:function(){this._owned?this._removeBtn.style.display="block":this._removeBtn.style.display="none"}},{key:"deleteCard",value:function(){this._card.remove(),this._template=null,this._card=null}},{key:"_insertData",value:function(){this._img.src=this._url,this._img.alt=this._title,this._text.textContent=this._title}},{key:"getCard",value:function(){return this._createCard(),this._card}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==a(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===a(o)?o:String(o)),r)}var o}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validationData=t,this._validationObject=n,this._submittingButton=this._validationObject.querySelector(this._validationData.submittingButtonSelector),this._inputList=Array.from(this._validationObject.querySelectorAll(this._validationData.inputSelector))}var t,n;return t=e,(n=[{key:"enableValidation",value:function(){this._setEventListener()}},{key:"validateOnOpen",value:function(){var e=this;this._inputList.every((function(e){return""===e.value}))?this._toggleSubmitState():(this._toggleSubmitState(),this._inputList.forEach((function(t){e._checkInputValidity(t)})))}},{key:"_setEventListener",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleSubmitState()}))}))}},{key:"_showInputError",value:function(e,t){var n=this._validationObject.querySelector("#".concat(e.name,"-error"));e.classList.add(this._validationData.inputInvalid),n.classList.add(this._validationData.errorVisible),n.textContent=t}},{key:"_hideInputError",value:function(e){var t=this._validationObject.querySelector("#".concat(e.name,"-error"));e.classList.remove(this._validationData.inputInvalid),t.classList.remove(this._validationData.errorVisible),t.textContent=""}},{key:"_toggleSubmitState",value:function(){this._checkIfAllInputIsValid()?(this._submittingButton.classList.remove(this._validationData.submittingButtonInvalid),this._submittingButton.removeAttribute("disabled")):(this._submittingButton.classList.add(this._validationData.submittingButtonInvalid),this._submittingButton.setAttribute("disabled",!0))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_checkIfAllInputIsValid",value:function(){return this._inputList.every((function(e){return e.validity.valid}))}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==c(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==c(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===c(o)?o:String(o)),r)}var o}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selector=t,this._popup=document.querySelector(this._selector),this._popupCloseBtn=this._popup.querySelector(".popup__close-btn"),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){t.target===t.currentTarget&&e.close()})),this._popupCloseBtn.addEventListener("click",(function(){e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}}])&&s(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==p(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===p(o)?o:String(o)),r)}var o}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=d(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=b(e)););return e}function m(e,t){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},m(e,t)}function _(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function b(e){return b=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},b(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=b(r);if(o){var n=b(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._img=t._popup.querySelector(".popup__image"),t._text=t._popup.querySelector(".popup__text"),t}return t=a,(n=[{key:"open",value:function(e,t,n){this._img.src=e,this._img.alt=t,this._text.textContent=n,h(b(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==k(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==k(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===k(o)?o:String(o)),r)}var o}var S=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){"top"===t?this._container.prepend(e):this._container.append(e)}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==w(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===w(o)?o:String(o)),r)}var o}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=O(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},j.apply(this,arguments)}function O(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}function P(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n,r=t.openCallback,o=t.submitCallback;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._openCallback=r,n._submitCallback=o,n._form=n._popup.querySelector(".form"),n._formInputs=n._form.querySelectorAll(".form__input"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;j(I(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),t.stopImmediatePropagation(),e._submitCallback(e._getInputValues())}))}},{key:"changeSumbitHandler",value:function(e){this._submitCallback=e}},{key:"open",value:function(){j(I(a.prototype),"open",this).call(this),this._openCallback()}},{key:"close",value:function(){this._form.reset(),j(I(a.prototype),"close",this).call(this)}},{key:"_getInputValues",value:function(){var e={};return this._formInputs.forEach((function(t){var n=t.name,r=t.value;e[n]=r})),e}}])&&C(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(f);function q(e){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},q(e)}function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==q(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==q(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===q(o)?o:String(o)),r)}var o}var x=function(){function e(t){var n=t.profileNameSel,r=t.profileJobSel,o=t.profileImageSel;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(n),this._profileJob=document.querySelector(r),this._profileImg=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._profileName.textContent,job:this._profileJob.textContent}}},{key:"setUserInfo",value:function(e){this._profileName.textContent=e.name,this._profileJob.textContent=e.job}},{key:"setUserImage",value:function(e){this._profileImg.src=e}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(void 0,o=function(e,t){if("object"!==R(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t);if("object"!==R(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(r.key,"string"),"symbol"===R(o)?o:String(o)),r)}var o}var B=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r,this._token=r.authorization}var t,n;return t=e,(n=[{key:"getProfileData",value:function(){return fetch("".concat(this._baseUrl,"/users/me/"),{headers:this._headers}).then(this._checkResponse)}},{key:"setProfileData",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.job})}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards/"),{headers:this._headers}).then(this._checkResponse)}},{key:"addNewCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e.place,link:e.url})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"unlikeCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"getProfileImage",value:function(){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"GET",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfileImage",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject(e.status)}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}())({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"a110f406-654f-4c53-bae6-3b8905b49b43","Content-Type":"application/json"}});function U(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var A="",V=document.querySelector(".profile__edit-btn"),N=document.querySelector(".profile__add-btn"),J=document.querySelector(".profile__avatar-box"),H=document.querySelector(".popup_type_edit-profile-img"),z=document.querySelector(".form__input_img"),M=document.querySelector(".form-edit-profile-img"),G=H.querySelector(".form__submit"),$=document.querySelector(".popup_type_edit-card"),F=$.querySelector(".form-edit"),K=$.querySelector(".form__input_field-name"),Q=$.querySelector(".form__input_field-job"),W=$.querySelector(".form__submit"),X=document.querySelector(".popup_type_add-card"),Y=X.querySelector(".form-add"),Z=X.querySelector(".form__submit"),ee=".elements",te=(document.querySelector(ee),new u(e,F)),ne=new u(e,Y),re=new u(e,M),oe=document.querySelector(".popup_type_delete-card").querySelector(".form__submit"),ie=null;te.enableValidation(),ne.enableValidation(),re.enableValidation();var ae=new x({profileNameSel:".profile__name",profileJobSel:".profile__job",profileImageSel:".profile__avatar"});Promise.all([B.getProfileData(),B.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i,a,l=[],u=!0,c=!1;try{if(i=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=i.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){c=!0,o=e}finally{try{if(!u&&null!=n.return&&(a=n.return(),Object(a)!==a))return}finally{if(c)throw o}}return l}}(t,n)||function(e,t){if(e){if("string"==typeof e)return U(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?U(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ae.setUserInfo({name:o.name,job:o.about}),ae.setUserImage(o.avatar),A=o._id,function(e){(ie=new S({renderer:function(e){var t=e.owner._id===A,n=pe(e.name,e.link,e._id,e.likes,{owned:t,userId:A});ie.addItem(n,"bottom")}},ee)).renderItems(e)}(i)})).catch((function(e){console.log(e)}));var le=new L(".popup_type_edit-card",{openCallback:function(){var e=ae.getUserInfo();K.value=e.name,Q.value=e.job,te.validateOnOpen()},submitCallback:function(e){W.innerText="Сохранение...",B.setProfileData(e).then((function(){B.getProfileData().then((function(e){ae.setUserInfo({name:e.name,job:e.about})})).catch((function(e){console.log(e)})),le.close()})).catch((function(e){console.log(e)})).finally((function(e){W.innerText="Сохранить"}))}});le.setEventListeners();var ue=new L(".popup_type_add-card",{openCallback:function(){ne.validateOnOpen()},submitCallback:function(e){Z.innerText="Сохранение...",B.addNewCard({place:e.place,url:e.url}).then((function(e){var t=pe(e.name,e.link,e._id,e.likes,{owned:!0,userId:A});ie.addItem(t,"top"),ue.close()})).catch((function(e){console.log(e)})).finally((function(e){Z.innerText="Сохранить"}))}});ue.setEventListeners();var ce=new v(".popup_type_pic");ce.setEventListeners();var se=new L(".popup_type_delete-card",{openCallback:function(){},submitCallback:function(){console.log("New submit handler will be made")}});se.setEventListeners();var fe=new L(".popup_type_edit-profile-img",{openCallback:function(){var e=fe._popup.querySelector(".form__submit");e.classList.add("form__submit_invalid"),e.setAttribute("disabled",!0)},submitCallback:function(){G.innerText="Сохранение...",B.updateProfileImage(z.value).then((function(e){console.log(e),ae.setUserImage(e.avatar),fe.close()})).catch((function(e){console.log(e)})).finally((function(e){G.innerText="Сохранить"}))}});function pe(e,t,n,r,o){var a=o.owned,l=o.userId,u=new i(e,t,n,r,{owned:a,userId:l},{handleImageClick:function(e,t,n){ce.open(e,t,n)},handleDeletionClick:function(e){se.open(),se.changeSumbitHandler((function(){oe.innerText="Удаление...",B.deleteCard(e).then((function(){u.deleteCard(),se.close()})).catch((function(e){console.log(e)})).finally((function(){oe.innerText="Сохранить"}))}))}},{api:B});return u.getCard()}fe.setEventListeners(),V.addEventListener("click",(function(){le.open()})),N.addEventListener("click",(function(){ue.open()})),J.addEventListener("click",(function(){fe.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUJBQWlCLFNBQVMsV0FBUTZKLEdBQXFCTyxNQUFPLElBQzVFdEQsRUFBZTlHLGlCQUFpQixTQUFTLFdBQVFpSyxHQUEyQkcsTUFBTyxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBEZWZhdWx0IGRhdGFcbmNvbnN0IGluaXRpYWxDYXJkcyA9IFtcbiAge1xuICAgIG5hbWU6ICfQkNGA0YXRi9C3JyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2Fya2h5ei5qcGcnLFxuICB9LFxuICB7XG4gICAgbmFtZTogJ9Cn0LXQu9GP0LHQuNC90YHQutCw0Y8g0L7QsdC70LDRgdGC0YwnLFxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvY2hlbHlhYmluc2stb2JsYXN0LmpwZycsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0JjQstCw0L3QvtCy0L4nLFxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQvaXZhbm92by5qcGcnLFxuICB9LFxuICB7XG4gICAgbmFtZTogJ9Ca0LDQvNGH0LDRgtC60LAnLFxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2FtY2hhdGthLmpwZycsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0KXQvtC70LzQvtCz0L7RgNGB0LrQuNC5INGA0LDQudC+0L0nLFxuICAgIGxpbms6ICdodHRwczovL3BpY3R1cmVzLnMzLnlhbmRleC5uZXQvZnJvbnRlbmQtZGV2ZWxvcGVyL2NhcmRzLWNvbXByZXNzZWQva2hvbG1vZ29yc2t5LXJheW9uLmpwZycsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAn0JHQsNC50LrQsNC7JyxcbiAgICBsaW5rOiAnaHR0cHM6Ly9waWN0dXJlcy5zMy55YW5kZXgubmV0L2Zyb250ZW5kLWRldmVsb3Blci9jYXJkcy1jb21wcmVzc2VkL2JhaWthbC5qcGcnLFxuICB9LFxuXTtcbmNvbnN0IHZhbGlkYXRpb25EYXRhID0ge1xuICBmb3JtU2VsZWN0b3I6ICcuZm9ybScsXG4gIGlucHV0U2VsZWN0b3I6ICcuZm9ybV9faW5wdXQnLFxuICBzdWJtaXR0aW5nQnV0dG9uU2VsZWN0b3I6ICcuZm9ybV9fc3VibWl0JyxcbiAgaW5wdXRFcnJvclNlbGVjdG9yOiAnLmVycm9yJyxcbiAgc3VibWl0dGluZ0J1dHRvbkludmFsaWQ6ICdmb3JtX19zdWJtaXRfaW52YWxpZCcsXG4gIGlucHV0SW52YWxpZDogJ2Zvcm1fX2lucHV0X2ludmFsaWQnLFxuICBlcnJvclZpc2libGU6ICdlcnJvcl92aXNpYmxlJ1xufTtcblxuXG5leHBvcnQge2luaXRpYWxDYXJkcywgdmFsaWRhdGlvbkRhdGF9OyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3Rvcih0aXRsZSwgdXJsLCBpZCwgbGlrZXMsIHsgb3duZWQsIHVzZXJJZCB9LCB7IGhhbmRsZUltYWdlQ2xpY2ssIGhhbmRsZURlbGV0aW9uQ2xpY2sgfSwgeyBhcGkgfSkge1xuICAgIHRoaXMuX3RpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5fdXJsID0gdXJsO1xuICAgIHRoaXMuX2lkID0gaWQ7XG4gICAgdGhpcy5fbGlrZXMgPSBsaWtlcztcbiAgICB0aGlzLl9saWtlc0NvdW50ID0gbGlrZXMubGVuZ3RoO1xuICAgIHRoaXMuX293bmVkID0gb3duZWQ7XG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xuICAgIHRoaXMuX2FwaSA9IGFwaTtcblxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IgPSAnLnRlbXBsYXRlJztcbiAgICB0aGlzLl90ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdGVtcGxhdGVTZWxlY3RvcikuY29udGVudDtcbiAgICB0aGlzLl9jYXJkID0gdGhpcy5fdGVtcGxhdGUucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgdGhpcy5fdGV4dCA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX3RpdGxlJyk7XG4gICAgdGhpcy5faW1nID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9faW1hZ2UnKTtcbiAgICB0aGlzLl9yZW1vdmVCdG4gPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X19yZW1vdmUnKTtcbiAgICB0aGlzLl9saWtlQnRuID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpO1xuICAgIHRoaXMuX2xpa2VDb3VudCA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2UtY291bnQnKTtcblxuICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2sgPSBoYW5kbGVJbWFnZUNsaWNrO1xuICAgIHRoaXMuX2hhbmRsZURlbGV0aW9uQ2xpY2sgPSBoYW5kbGVEZWxldGlvbkNsaWNrO1xuICB9XG5cbiAgX2NyZWF0ZUNhcmQoKSB7XG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLl9pbnNlcnREYXRhKCk7XG4gICAgdGhpcy5fc2V0TGlrZUNvdW50KCk7XG4gICAgdGhpcy5fdG9nZ2xlRGVsZXRlQnRuSWZPd25lZCgpO1xuICAgIHRoaXMuX2NoZWNrSWZMaWtlZCgpO1xuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX2ltZy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soXG4gICAgICAgIHRoaXMuX2ltZy5zcmMsXG4gICAgICAgIHRoaXMuX2ltZy5hbHQsXG4gICAgICAgIHRoaXMuX3RleHQudGV4dENvbnRlbnRcbiAgICAgICk7XG4gICAgfSk7XG4gICAgdGhpcy5fbGlrZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX3RvZ2dsZUxpa2UpO1xuICAgIHRoaXMuX3JlbW92ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NsaWNrUmVtb3ZlKTtcbiAgfVxuXG4gIF9jaGVja0lmTGlrZWQoKSB7XG4gICAgdGhpcy5fbGlrZXMuZm9yRWFjaCgobGlrZSkgPT4ge1xuICAgICAgaWYgKGxpa2UuX2lkID09PSB0aGlzLl91c2VySWQpIHtcbiAgICAgICAgdGhpcy5fYmxhY2tlbkxpa2UoKVxuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBfYmxhY2tlbkxpa2UoKSB7XG4gICAgdGhpcy5fbGlrZUJ0bi5jbGFzc0xpc3QuYWRkKCdlbGVtZW50X19saWtlX2FjdGl2ZScpO1xuICB9XG5cbiAgX3RvZ2dsZUxpa2UgPSAoKSA9PiB7XG4gICAgaWYgKHRoaXMuX2xpa2VCdG4uY2xhc3NMaXN0LmNvbnRhaW5zKCdlbGVtZW50X19saWtlX2FjdGl2ZScpKSB7XG4gICAgICB0aGlzLl9hcGkudW5saWtlQ2FyZCh0aGlzLl9pZClcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XG4gICAgICAgICAgdGhpcy5fbGlrZXNDb3VudCA9IHJlcy5saWtlcy5sZW5ndGg7XG4gICAgICAgICAgdGhpcy5fc2V0TGlrZUNvdW50KCk7XG4gICAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2FwaS5saWtlQ2FyZCh0aGlzLl9pZClcbiAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICB0aGlzLl9saWtlQnRuLmNsYXNzTGlzdC5hZGQoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XG4gICAgICAgICAgdGhpcy5fbGlrZXNDb3VudCA9IHJlcy5saWtlcy5sZW5ndGg7XG4gICAgICAgICAgdGhpcy5fc2V0TGlrZUNvdW50KCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF9zZXRMaWtlQ291bnQoKSB7XG4gICAgaWYgKHRoaXMuX2xpa2VzQ291bnQgPiAwKSB7XG4gICAgICB0aGlzLl9saWtlQ291bnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICB0aGlzLl9saWtlQ291bnQudGV4dENvbnRlbnQgPSB0aGlzLl9saWtlc0NvdW50O1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9saWtlQ291bnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9XG4gIH1cblxuICBfdG9nZ2xlRGVsZXRlQnRuSWZPd25lZCgpIHtcbiAgICB0aGlzLl9vd25lZFxuICAgICAgPyB0aGlzLl9yZW1vdmVCdG4uc3R5bGUuZGlzcGxheSA9ICdibG9jaydcbiAgICAgIDogdGhpcy5fcmVtb3ZlQnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgfVxuXG4gIF9jbGlja1JlbW92ZSA9ICgpID0+IHtcbiAgICB0aGlzLl9oYW5kbGVEZWxldGlvbkNsaWNrKHRoaXMuX2lkKTtcbiAgfVxuXG4gIGRlbGV0ZUNhcmQoKSB7XG4gICAgdGhpcy5fY2FyZC5yZW1vdmUoKTtcbiAgICB0aGlzLl90ZW1wbGF0ZSA9IG51bGw7XG4gICAgdGhpcy5fY2FyZCA9IG51bGw7XG4gIH1cblxuICBfaW5zZXJ0RGF0YSgpIHtcbiAgICB0aGlzLl9pbWcuc3JjID0gdGhpcy5fdXJsO1xuICAgIHRoaXMuX2ltZy5hbHQgPSB0aGlzLl90aXRsZTtcbiAgICB0aGlzLl90ZXh0LnRleHRDb250ZW50ID0gdGhpcy5fdGl0bGU7XG4gIH1cblxuICBnZXRDYXJkKCkge1xuICAgIHRoaXMuX2NyZWF0ZUNhcmQoKTtcbiAgICByZXR1cm4gdGhpcy5fY2FyZDtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZvcm1WYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3RvciAodmFsaWRhdGlvbkRhdGEsIHZhbGlkYXRpb25PYmplY3QpIHtcbiAgICB0aGlzLl92YWxpZGF0aW9uRGF0YSA9IHZhbGlkYXRpb25EYXRhO1xuICAgIHRoaXMuX3ZhbGlkYXRpb25PYmplY3QgPSB2YWxpZGF0aW9uT2JqZWN0O1xuICAgIHRoaXMuX3N1Ym1pdHRpbmdCdXR0b24gPSB0aGlzLl92YWxpZGF0aW9uT2JqZWN0LnF1ZXJ5U2VsZWN0b3IodGhpcy5fdmFsaWRhdGlvbkRhdGEuc3VibWl0dGluZ0J1dHRvblNlbGVjdG9yKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX3ZhbGlkYXRpb25PYmplY3QucXVlcnlTZWxlY3RvckFsbCh0aGlzLl92YWxpZGF0aW9uRGF0YS5pbnB1dFNlbGVjdG9yKSk7XG4gIH1cblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXIoKTtcbiAgfVxuICBcbiAgdmFsaWRhdGVPbk9wZW4oKSB7XG4gICAgLy8gSWYgbm8gaW5wdXQgaXMgbWFkZSwgc2hvdyBubyBlcnJvclxuICAgIGNvbnN0IGlucHV0SXNFbXB0eSA9IHRoaXMuX2lucHV0TGlzdC5ldmVyeSgoaW5wdXRFbGVtZW50KSA9PiB7IFxuICAgICAgcmV0dXJuIGlucHV0RWxlbWVudC52YWx1ZSA9PT0gJyc7IFxuICAgIH0pO1xuICAgIFxuICAgIGlmIChpbnB1dElzRW1wdHkpIHsgXG4gICAgICB0aGlzLl90b2dnbGVTdWJtaXRTdGF0ZSgpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX3RvZ2dsZVN1Ym1pdFN0YXRlKCk7XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICB9KVxuICB9XG5cbiAgX3NldEV2ZW50TGlzdGVuZXIoKSB7XG4gICAgLy8gUXVlcnlpbmcgZXZlcnkgLmZvcm1fX2lucHV0XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xuICAgICAgICAvLyBIYW5kbGluZyBFcnJvciBtZXNzYWdlIChzcGFuKSAmIFJlZCB1bmRlcmxpbmUgd2FybmluZ1xuICAgICAgICB0aGlzLl9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgLy8gSGFuZGxpbmcgU3VibWl0IEJ1dHRvbiBzdGF0ZTpcbiAgICAgICAgdGhpcy5fdG9nZ2xlU3VibWl0U3RhdGUoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fdmFsaWRhdGlvbk9iamVjdC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5uYW1lfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX3ZhbGlkYXRpb25EYXRhLmlucHV0SW52YWxpZCk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fdmFsaWRhdGlvbkRhdGEuZXJyb3JWaXNpYmxlKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XG4gIH1cblxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fdmFsaWRhdGlvbk9iamVjdC5xdWVyeVNlbGVjdG9yKFxuICAgICAgYCMke2lucHV0RWxlbWVudC5uYW1lfS1lcnJvcmBcbiAgICApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3ZhbGlkYXRpb25EYXRhLmlucHV0SW52YWxpZCk7XG4gICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkRhdGEuZXJyb3JWaXNpYmxlKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSAnJztcbiAgfVxuXG4gIF90b2dnbGVTdWJtaXRTdGF0ZSgpIHtcbiAgICBpZiAodGhpcy5fY2hlY2tJZkFsbElucHV0SXNWYWxpZCgpKSB7XG4gICAgICB0aGlzLl9zdWJtaXR0aW5nQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fdmFsaWRhdGlvbkRhdGEuc3VibWl0dGluZ0J1dHRvbkludmFsaWQpO1xuICAgICAgdGhpcy5fc3VibWl0dGluZ0J1dHRvbi5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3N1Ym1pdHRpbmdCdXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl92YWxpZGF0aW9uRGF0YS5zdWJtaXR0aW5nQnV0dG9uSW52YWxpZCk7XG4gICAgICB0aGlzLl9zdWJtaXR0aW5nQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICB9XG4gIH1cblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xuICAgIGlmIChpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCwgaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlKTtcbiAgICB9XG4gIH1cblxuICBfY2hlY2tJZkFsbElucHV0SXNWYWxpZCgpIHtcbiAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LmV2ZXJ5KChpbnB1dEVsZW1lbnQpID0+IHtcbiAgICAgIHJldHVybiBpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcbiAgICAgICAgdGhpcy5fc2VsZWN0b3IgPSBzZWxlY3RvcjtcbiAgICAgICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3NlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fcG9wdXBDbG9zZUJ0biA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fY2xvc2UtYnRuJyk7XG4gICAgICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTsgXG4gICAgfVxuXG4gICAgb3BlbigpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG5cbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIC8vIENsb3NpbmcgYnkgY2xpY2sgb24gT3ZlcmxheVxuICAgICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCAoZXZ0KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXZ0LnRhcmdldCA9PT0gZXZ0LmN1cnJlbnRUYXJnZXQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBDbG9zaW5nIGJ5IGNsaWNrIG9uIENsb3NlIEJ1dHRvblxuICAgICAgICB0aGlzLl9wb3B1cENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcblxuICAgIH1cblxuICAgIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcbiAgICAgICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3Ioc2VsZWN0b3IpIHtcbiAgICAgICAgc3VwZXIoc2VsZWN0b3IpO1xuICAgICAgICB0aGlzLl9pbWcgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG4gICAgICAgIHRoaXMuX3RleHQgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3RleHQnKTtcbiAgICB9XG5cbiAgICBvcGVuKGltZ1NyYywgaW1nQWx0LCB0ZXh0KSB7XG4gICAgICAgIHRoaXMuX2ltZy5zcmMgPSBpbWdTcmM7XG4gICAgICAgIHRoaXMuX2ltZy5hbHQgPSBpbWdBbHQ7XG4gICAgICAgIHRoaXMuX3RleHQudGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICBzdXBlci5vcGVuKCk7XG4gICAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICAgIGNvbnN0cnVjdG9yKHsgcmVuZGVyZXIgfSwgc2VsZWN0b3IpIHtcbiAgICAgICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICAgICAgdGhpcy5fY29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgfVxuXG4gICAgcmVuZGVySXRlbXMoaXRlbXMpIHtcbiAgICAgICAgaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFkZEl0ZW0oaXRlbSwgcG9zKSB7XG4gICAgICAgIHBvcyA9PT0gJ3RvcCdcbiAgICAgICAgICAgID8gdGhpcy5fY29udGFpbmVyLnByZXBlbmQoaXRlbSlcbiAgICAgICAgICAgIDogdGhpcy5fY29udGFpbmVyLmFwcGVuZChpdGVtKTtcbiAgICB9XG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3Ioc2VsZWN0b3IsIHsgb3BlbkNhbGxiYWNrLCBzdWJtaXRDYWxsYmFjayB9KSB7XG4gICAgICAgIHN1cGVyKHNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fb3BlbkNhbGxiYWNrID0gb3BlbkNhbGxiYWNrO1xuICAgICAgICB0aGlzLl9zdWJtaXRDYWxsYmFjayA9IHN1Ym1pdENhbGxiYWNrO1xuICAgICAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLmZvcm0nKTtcbiAgICAgICAgdGhpcy5fZm9ybUlucHV0cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCgnLmZvcm1fX2lucHV0Jyk7XG4gICAgfVxuXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG4gICAgICAgICAgICB0aGlzLl9zdWJtaXRDYWxsYmFjayh0aGlzLl9nZXRJbnB1dFZhbHVlcygpKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2hhbmdlU3VtYml0SGFuZGxlcihuZXdTdWJtaXRIYW5kZWxlcikge1xuICAgICAgICB0aGlzLl9zdWJtaXRDYWxsYmFjayA9IG5ld1N1Ym1pdEhhbmRlbGVyO1xuICAgIH1cblxuICAgIG9wZW4oKSB7XG4gICAgICAgIHN1cGVyLm9wZW4oKTtcbiAgICAgICAgdGhpcy5fb3BlbkNhbGxiYWNrKCk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcbiAgICB9XG5cbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge307XG4gICAgICAgIHRoaXMuX2Zvcm1JbnB1dHMuZm9yRWFjaCgoZm9ybUlucHV0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBmb3JtSW5wdXQubmFtZTtcbiAgICAgICAgICAgIGNvbnN0IHZhbCA9IGZvcm1JbnB1dC52YWx1ZTtcbiAgICAgICAgICAgIGlucHV0VmFsdWVzW2tleV0gPSB2YWw7XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBpbnB1dFZhbHVlcztcbiAgICB9XG5cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVc2VySW5mbyB7XG4gICAgY29uc3RydWN0b3IoeyBwcm9maWxlTmFtZVNlbCwgcHJvZmlsZUpvYlNlbCwgcHJvZmlsZUltYWdlU2VsfSkge1xuICAgICAgICB0aGlzLl9wcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZU5hbWVTZWwpO1xuICAgICAgICB0aGlzLl9wcm9maWxlSm9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlSm9iU2VsKTtcbiAgICAgICAgdGhpcy5fcHJvZmlsZUltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUltYWdlU2VsKTtcbiAgICB9XG5cbiAgICBnZXRVc2VySW5mbygpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IHRoaXMuX3Byb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICAgICAgICBjb25zdCBqb2IgPSB0aGlzLl9wcm9maWxlSm9iLnRleHRDb250ZW50O1xuICAgICAgICByZXR1cm4geyBuYW1lLCBqb2IgfTtcbiAgICB9XG5cbiAgICBzZXRVc2VySW5mbyhpbnB1dFZhbHVlcykge1xuICAgICAgICB0aGlzLl9wcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IGlucHV0VmFsdWVzLm5hbWU7XG4gICAgICAgIHRoaXMuX3Byb2ZpbGVKb2IudGV4dENvbnRlbnQgPSBpbnB1dFZhbHVlcy5qb2I7XG4gICAgfVxuXG4gICAgc2V0VXNlckltYWdlKHVybCkge1xuICAgICAgICB0aGlzLl9wcm9maWxlSW1nLnNyYyA9IHVybDtcbiAgICB9XG5cbn0iLCJjbGFzcyBBcGkge1xuICAgY29uc3RydWN0b3IoeyBiYXNlVXJsLCBoZWFkZXJzIH0pIHtcbiAgICAgIC8vINGC0LXQu9C+INC60L7QvdGB0YLRgNGD0LrRgtC+0YDQsFxuICAgICAgdGhpcy5fYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgICB0aGlzLl9oZWFkZXJzID0gaGVhZGVycztcbiAgICAgIHRoaXMuX3Rva2VuID0gaGVhZGVycy5hdXRob3JpemF0aW9uO1xuICAgfVxuXG4gICBnZXRQcm9maWxlRGF0YSgpIHtcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9gLCB7XG4gICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgfSlcbiAgICAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICAgfVxuXG4gICBzZXRQcm9maWxlRGF0YShpbnB1dFZhbHVlcykge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2AsIHtcbiAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBuYW1lOiBpbnB1dFZhbHVlcy5uYW1lLFxuICAgICAgICAgICAgYWJvdXQ6IGlucHV0VmFsdWVzLmpvYlxuICAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgIH1cblxuICAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2AsIHtcbiAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICB9KVxuICAgICAgICAgLnRoZW4odGhpcy5fY2hlY2tSZXNwb25zZSk7XG4gICB9XG5cbiAgIGFkZE5ld0NhcmQoaW5wdXRWYWx1ZXMpIHtcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy9gLCB7XG4gICAgICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICBuYW1lOiBpbnB1dFZhbHVlcy5wbGFjZSxcbiAgICAgICAgICAgIGxpbms6IGlucHV0VmFsdWVzLnVybFxuICAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcblxuICAgfVxuXG4gICBkZWxldGVDYXJkKGlkKSB7XG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH1gLCB7XG4gICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIH0pXG4gICAgICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgIH1cblxuICAgbGlrZUNhcmQoaWQpIHtcbiAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgfSlcbiAgICAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICAgfVxuXG4gICB1bmxpa2VDYXJkKGlkKSB7XG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XG4gICAgICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgIH0pXG4gICAgICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgIH1cblxuICAgZ2V0UHJvZmlsZUltYWdlKCkge1xuICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgfSlcbiAgICAgICAgIC50aGVuKHRoaXMuX2NoZWNrUmVzcG9uc2UpO1xuICAgfVxuXG4gICB1cGRhdGVQcm9maWxlSW1hZ2UodXJsKSB7XG4gICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWUvYXZhdGFyYCwge1xuICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIGF2YXRhcjogdXJsLFxuICAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgICAgICAudGhlbih0aGlzLl9jaGVja1Jlc3BvbnNlKTtcbiAgIH1cblxuICAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XG4gICAgICAgICByZXR1cm4gcmVzLm9rID8gcmVzLmpzb24oKSA6IFByb21pc2UucmVqZWN0KHJlcy5zdGF0dXMpO1xuICAgIH1cblxufVxuXG5leHBvcnQgY29uc3QgYXBpID0gbmV3IEFwaSh7XG4gICBiYXNlVXJsOiAnaHR0cHM6Ly9tZXN0by5ub21vcmVwYXJ0aWVzLmNvL3YxL2NvaG9ydC01NScsXG4gICBoZWFkZXJzOiB7XG4gICAgICBhdXRob3JpemF0aW9uOiAnYTExMGY0MDYtNjU0Zi00YzUzLWJhZTYtM2I4OTA1YjQ5YjQzJyxcbiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbidcbiAgIH0sXG59KTsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgJy4vaW5kZXguY3NzJztcbmltcG9ydCB7IHZhbGlkYXRpb25EYXRhIH0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcbmltcG9ydCBDYXJkIGZyb20gJy4uL2NvbXBvbmVudHMvQ2FyZC5qcyc7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IFVzZXJJbmZvIGZyb20gJy4uL2NvbXBvbmVudHMvVXNlckluZm8uanMnO1xuaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vY29tcG9uZW50cy9BcGkuanMnO1xuXG4vLyBQcm9maWxlIGVsZW1lbnRzXG5sZXQgdXNlcklkID0gJydcbmNvbnN0IGVkaXRpbmdCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fZWRpdC1idG4nKTtcbmNvbnN0IGFkZGluZ0NhcmRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ0bicpO1xuY29uc3QgZWRpdFByb2ZpbGVJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYXZhdGFyLWJveCcpO1xuY29uc3QgcG9wdXBFZGl0UHJvZmlsZUltZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2VkaXQtcHJvZmlsZS1pbWcnKTtcbmNvbnN0IGZvcm1JbnB1dFByb2ZpbGVJbWcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9faW5wdXRfaW1nJyk7XG5jb25zdCBlZGl0UHJvZmlsZUltZ0Zvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1lZGl0LXByb2ZpbGUtaW1nJyk7XG5jb25zdCBzdWJtaXRQcm9maWxlSW1nQnRuID0gcG9wdXBFZGl0UHJvZmlsZUltZy5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VibWl0Jyk7XG5cbi8vIFBvcHVwIGVkaXQtY2FyZCBlbGVtZW50c1xuY29uc3QgcG9wdXBFZGl0Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2VkaXQtY2FyZCcpO1xuY29uc3QgZWRpdGluZ0Zvcm0gPSBwb3B1cEVkaXRDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5mb3JtLWVkaXQnKTtcbmNvbnN0IGlucHV0TmFtZSA9IHBvcHVwRWRpdENhcmQucXVlcnlTZWxlY3RvcignLmZvcm1fX2lucHV0X2ZpZWxkLW5hbWUnKTtcbmNvbnN0IGlucHV0Sm9iID0gcG9wdXBFZGl0Q2FyZC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9faW5wdXRfZmllbGQtam9iJyk7XG5jb25zdCBzdWJtaXRFZGl0QnRuID0gcG9wdXBFZGl0Q2FyZC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VibWl0Jyk7XG5cbi8vIFBvcHVwIGFkZC1jYXJkIGVsZW1lbnRzXG5jb25zdCBwb3B1cEFkZENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfdHlwZV9hZGQtY2FyZCcpO1xuY29uc3QgYWRkaW5nRm9ybSA9IHBvcHVwQWRkQ2FyZC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1hZGQnKTtcbmNvbnN0IHN1Ym1pdEFkZEJ0biA9IHBvcHVwQWRkQ2FyZC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VibWl0Jyk7XG5cbi8vIE90aGVyIGRhdGFcbmNvbnN0IGNhcmRzQ29udGFpbmVyU2VsID0gJy5lbGVtZW50cyc7XG5jb25zdCBjYXJkc0NvbnRhaW5lckVsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjYXJkc0NvbnRhaW5lclNlbCk7XG5jb25zdCBlZGl0aW5nRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25EYXRhLCBlZGl0aW5nRm9ybSk7XG5jb25zdCBhZGRpbmdGb3JtVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IodmFsaWRhdGlvbkRhdGEsIGFkZGluZ0Zvcm0pO1xuY29uc3QgdXBkYXRpbmdJbWFnZUZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uRGF0YSwgZWRpdFByb2ZpbGVJbWdGb3JtKTtcbmNvbnN0IHBvcHVwRGVsZXRlQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF90eXBlX2RlbGV0ZS1jYXJkJyk7XG5jb25zdCBzdWJtaXRDYXJkRGVsZXRpb24gPSBwb3B1cERlbGV0ZUNhcmQucXVlcnlTZWxlY3RvcignLmZvcm1fX3N1Ym1pdCcpO1xubGV0IGNhcmRzTGlzdCA9IG51bGw7XG5lZGl0aW5nRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5hZGRpbmdGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbnVwZGF0aW5nSW1hZ2VGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcblxuLy8gU2V0dGluZyBVc2VyIEluZm9cbi8vIFNldHRpbmcgaW5pdGlhbCBDYXJkcyBmcm9tIEFQSVxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBwcm9maWxlTmFtZVNlbDogJy5wcm9maWxlX19uYW1lJywgcHJvZmlsZUpvYlNlbDogJy5wcm9maWxlX19qb2InLCBwcm9maWxlSW1hZ2VTZWw6ICcucHJvZmlsZV9fYXZhdGFyJyB9KTtcblByb21pc2UuYWxsKFthcGkuZ2V0UHJvZmlsZURhdGEoKSwgYXBpLmdldEluaXRpYWxDYXJkcygpXSlcbiAgLnRoZW4oKFtwcm9maWxlRGF0YSwgaW5pdGlhbENhcmRzXSkgPT4ge1xuICAgIC8vIEZldGNoZWQgcHJvZmlsZSBkYXRhXG4gICAgdXNlckluZm8uc2V0VXNlckluZm8oeyBuYW1lOiBwcm9maWxlRGF0YS5uYW1lLCBqb2I6IHByb2ZpbGVEYXRhLmFib3V0IH0pXG4gICAgdXNlckluZm8uc2V0VXNlckltYWdlKHByb2ZpbGVEYXRhLmF2YXRhcik7XG4gICAgdXNlcklkID0gcHJvZmlsZURhdGEuX2lkO1xuICAgIC8vIEZldGNoZWQgY2FyZHMgZGF0YVxuICAgIHNldEluaXRpYWxDYXJkcyhpbml0aWFsQ2FyZHMpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmxvZyhlcnIpO1xuICB9KTtcblxuZnVuY3Rpb24gc2V0SW5pdGlhbENhcmRzKGluaXRpYWxDYXJkcykge1xuICBjYXJkc0xpc3QgPSBuZXcgU2VjdGlvbih7XG4gICAgcmVuZGVyZXI6IChjYXJkSXRlbSkgPT4ge1xuICAgICAgY29uc3Qgb3duZWQgPSBjYXJkSXRlbS5vd25lci5faWQgPT09IHVzZXJJZDtcbiAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGNhcmRJdGVtLm5hbWUsIGNhcmRJdGVtLmxpbmssIGNhcmRJdGVtLl9pZCwgY2FyZEl0ZW0ubGlrZXMsIHsgb3duZWQ6IG93bmVkLCB1c2VySWQ6IHVzZXJJZCB9KTtcbiAgICAgIGNhcmRzTGlzdC5hZGRJdGVtKGNhcmQsICdib3R0b20nKTtcbiAgICB9LFxuICB9LFxuICAgIGNhcmRzQ29udGFpbmVyU2VsXG4gIClcbiAgY2FyZHNMaXN0LnJlbmRlckl0ZW1zKGluaXRpYWxDYXJkcyk7XG59XG5cbi8vIFBvcHVwIEVkaXQgVXNlciBJbmZvIGhhbmRsaW5nXG5jb25zdCBwb3B1cFdpdGhFZGl0Rm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICAnLnBvcHVwX3R5cGVfZWRpdC1jYXJkJyxcbiAge1xuICAgIG9wZW5DYWxsYmFjazogKCkgPT4ge1xuICAgICAgY29uc3QgdXNlckluZm9EYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKTtcbiAgICAgIGlucHV0TmFtZS52YWx1ZSA9IHVzZXJJbmZvRGF0YS5uYW1lO1xuICAgICAgaW5wdXRKb2IudmFsdWUgPSB1c2VySW5mb0RhdGEuam9iO1xuICAgICAgZWRpdGluZ0Zvcm1WYWxpZGF0b3IudmFsaWRhdGVPbk9wZW4oKTtcbiAgICB9LFxuICAgIHN1Ym1pdENhbGxiYWNrOiAoaW5wdXRWYWx1ZXMpID0+IHtcbiAgICAgIHN1Ym1pdEVkaXRCdG4uaW5uZXJUZXh0ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJztcbiAgICAgIGFwaS5zZXRQcm9maWxlRGF0YShpbnB1dFZhbHVlcylcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGFwaS5nZXRQcm9maWxlRGF0YSgpXG4gICAgICAgICAgICAudGhlbihwcm9maWxlRGF0YSA9PiB7XG4gICAgICAgICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHsgbmFtZTogcHJvZmlsZURhdGEubmFtZSwgam9iOiBwcm9maWxlRGF0YS5hYm91dCB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICBwb3B1cFdpdGhFZGl0Rm9ybS5jbG9zZSgpXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pXG4gICAgICAgIC5maW5hbGx5KHJlcyA9PiB7XG4gICAgICAgICAgc3VibWl0RWRpdEJ0bi5pbm5lclRleHQgPSAn0KHQvtGF0YDQsNC90LjRgtGMJztcbiAgICAgICAgfSlcbiAgICB9XG4gIH1cbilcbnBvcHVwV2l0aEVkaXRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIFBvcHVwIEFkZC1DYXJkIGhhbmRsaW5nXG5jb25zdCBwb3B1cFdpdGhBZGRDYXJkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICAnLnBvcHVwX3R5cGVfYWRkLWNhcmQnLFxuICB7XG4gICAgb3BlbkNhbGxiYWNrOiAoKSA9PiB7XG4gICAgICBhZGRpbmdGb3JtVmFsaWRhdG9yLnZhbGlkYXRlT25PcGVuKCk7XG4gICAgfSxcbiAgICBzdWJtaXRDYWxsYmFjazogKGlucHV0VmFsdWVzKSA9PiB7XG4gICAgICBzdWJtaXRBZGRCdG4uaW5uZXJUZXh0ID0gJ9Ch0L7RhdGA0LDQvdC10L3QuNC1Li4uJztcbiAgICAgIGFwaS5hZGROZXdDYXJkKHsgcGxhY2U6IGlucHV0VmFsdWVzLnBsYWNlLCB1cmw6IGlucHV0VmFsdWVzLnVybCB9KVxuICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKHJlcy5uYW1lLCByZXMubGluaywgcmVzLl9pZCwgcmVzLmxpa2VzLCB7IG93bmVkOiB0cnVlLCB1c2VySWQ6IHVzZXJJZCB9KTtcbiAgICAgICAgICBjYXJkc0xpc3QuYWRkSXRlbShjYXJkLCAndG9wJyk7XG4gICAgICAgICAgcG9wdXBXaXRoQWRkQ2FyZEZvcm0uY2xvc2UoKVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseShyZXMgPT4ge1xuICAgICAgICAgIHN1Ym1pdEFkZEJ0bi5pbm5lclRleHQgPSAn0KHQvtGF0YDQsNC90LjRgtGMJztcbiAgICAgICAgfSlcbiAgICB9XG4gIH1cbilcbnBvcHVwV2l0aEFkZENhcmRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbi8vIFBvcHVwIEltYWdlIGhhbmRsaW5nIFxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoJy5wb3B1cF90eXBlX3BpYycpO1xucG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gUG9wdXAgd2l0aCBDb25maW1hdGlvbiBoYW5kbGluZ1xuY29uc3QgcG9wdXBXaXRoQ29uZmlybWF0aW9uID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cF90eXBlX2RlbGV0ZS1jYXJkJyxcbiAge1xuICAgIG9wZW5DYWxsYmFjazogKCkgPT4geyB9LFxuICAgIHN1Ym1pdENhbGxiYWNrOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnTmV3IHN1Ym1pdCBoYW5kbGVyIHdpbGwgYmUgbWFkZScpO1xuICAgIH1cbiAgfSk7XG5wb3B1cFdpdGhDb25maXJtYXRpb24uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gRWRpdCBQcm9maWxlIGltYWdlIGhhbmRsaW5nXG5jb25zdCBwb3B1cFdpdGhQcm9maWxlSW1nRWRpdGluZyA9IG5ldyBQb3B1cFdpdGhGb3JtKCcucG9wdXBfdHlwZV9lZGl0LXByb2ZpbGUtaW1nJyxcbiAge1xuICAgIG9wZW5DYWxsYmFjazogKCkgPT4ge1xuICAgICAgY29uc3Qgc3VibWl0dGluZ0J1dHRvbiA9IHBvcHVwV2l0aFByb2ZpbGVJbWdFZGl0aW5nLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuZm9ybV9fc3VibWl0Jyk7XG4gICAgICBzdWJtaXR0aW5nQnV0dG9uLmNsYXNzTGlzdC5hZGQoJ2Zvcm1fX3N1Ym1pdF9pbnZhbGlkJyk7XG4gICAgICBzdWJtaXR0aW5nQnV0dG9uLnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgICB9LFxuICAgIHN1Ym1pdENhbGxiYWNrOiAoKSA9PiB7XG4gICAgICBzdWJtaXRQcm9maWxlSW1nQnRuLmlubmVyVGV4dCA9ICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLic7XG4gICAgICBhcGkudXBkYXRlUHJvZmlsZUltYWdlKGZvcm1JbnB1dFByb2ZpbGVJbWcudmFsdWUpXG4gICAgICAgIC50aGVuKHByb2ZpbGVEYXRhID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhwcm9maWxlRGF0YSk7XG4gICAgICAgICAgdXNlckluZm8uc2V0VXNlckltYWdlKHByb2ZpbGVEYXRhLmF2YXRhcik7XG4gICAgICAgICAgcG9wdXBXaXRoUHJvZmlsZUltZ0VkaXRpbmcuY2xvc2UoKVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseShyZXMgPT4ge1xuICAgICAgICAgIHN1Ym1pdFByb2ZpbGVJbWdCdG4uaW5uZXJUZXh0ID0gJ9Ch0L7RhdGA0LDQvdC40YLRjCc7XG4gICAgICAgIH0pXG4gICAgfVxuICB9KTtcbnBvcHVwV2l0aFByb2ZpbGVJbWdFZGl0aW5nLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cblxuLy8gRXZlbnRsaXN0ZW5lcnNcbmVkaXRpbmdCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IHBvcHVwV2l0aEVkaXRGb3JtLm9wZW4oKSB9KTtcbmFkZGluZ0NhcmRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IHBvcHVwV2l0aEFkZENhcmRGb3JtLm9wZW4oKSB9KTtcbmVkaXRQcm9maWxlSW1nLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4geyBwb3B1cFdpdGhQcm9maWxlSW1nRWRpdGluZy5vcGVuKCkgfSlcblxuLy8gQ3JlYXRpbmcgY2FyZFxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNhcmQodGl0bGUsIHVybCwgaWQsIGxpa2VzLCB7IG93bmVkLCB1c2VySWQgfSkge1xuICBjb25zdCBjYXJkID0gbmV3IENhcmQoXG4gICAgdGl0bGUsXG4gICAgdXJsLFxuICAgIGlkLFxuICAgIGxpa2VzLFxuICAgIHtcbiAgICAgIG93bmVkLFxuICAgICAgdXNlcklkXG4gICAgfSxcbiAgICB7XG4gICAgICBoYW5kbGVJbWFnZUNsaWNrOiAoaW1nU3JjLCBpbWdBbHQsIHRleHQpID0+IHtcbiAgICAgICAgcG9wdXBXaXRoSW1hZ2Uub3BlbihpbWdTcmMsIGltZ0FsdCwgdGV4dCk7XG4gICAgICB9LFxuICAgICAgaGFuZGxlRGVsZXRpb25DbGljazogKGlkKSA9PiB7XG4gICAgICAgIHBvcHVwV2l0aENvbmZpcm1hdGlvbi5vcGVuKClcbiAgICAgICAgcG9wdXBXaXRoQ29uZmlybWF0aW9uLmNoYW5nZVN1bWJpdEhhbmRsZXIoKCkgPT4ge1xuICAgICAgICAgIHN1Ym1pdENhcmREZWxldGlvbi5pbm5lclRleHQgPSAn0KPQtNCw0LvQtdC90LjQtS4uLic7XG4gICAgICAgICAgYXBpLmRlbGV0ZUNhcmQoaWQpXG4gICAgICAgICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgIGNhcmQuZGVsZXRlQ2FyZCgpO1xuICAgICAgICAgICAgICBwb3B1cFdpdGhDb25maXJtYXRpb24uY2xvc2UoKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICAgIHN1Ym1pdENhcmREZWxldGlvbi5pbm5lclRleHQgPSAn0KHQvtGF0YDQsNC90LjRgtGMJztcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH1cbiAgICAgICAgKVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgYXBpOiBhcGlcbiAgICB9LFxuICApO1xuICByZXR1cm4gY2FyZC5nZXRDYXJkKCk7XG59Il0sIm5hbWVzIjpbInZhbGlkYXRpb25EYXRhIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdHRpbmdCdXR0b25TZWxlY3RvciIsImlucHV0RXJyb3JTZWxlY3RvciIsInN1Ym1pdHRpbmdCdXR0b25JbnZhbGlkIiwiaW5wdXRJbnZhbGlkIiwiZXJyb3JWaXNpYmxlIiwiQ2FyZCIsInRpdGxlIiwidXJsIiwiaWQiLCJsaWtlcyIsIm93bmVkIiwidXNlcklkIiwiaGFuZGxlSW1hZ2VDbGljayIsImhhbmRsZURlbGV0aW9uQ2xpY2siLCJhcGkiLCJfbGlrZUJ0biIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiX2FwaSIsInVubGlrZUNhcmQiLCJfaWQiLCJ0aGVuIiwicmVzIiwicmVtb3ZlIiwiX2xpa2VzQ291bnQiLCJsZW5ndGgiLCJfc2V0TGlrZUNvdW50IiwibGlrZUNhcmQiLCJhZGQiLCJfaGFuZGxlRGVsZXRpb25DbGljayIsInRoaXMiLCJfdGl0bGUiLCJfdXJsIiwiX2xpa2VzIiwiX293bmVkIiwiX3VzZXJJZCIsIl90ZW1wbGF0ZVNlbGVjdG9yIiwiX3RlbXBsYXRlIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsIl9jYXJkIiwiY2xvbmVOb2RlIiwiX3RleHQiLCJfaW1nIiwiX3JlbW92ZUJ0biIsIl9saWtlQ291bnQiLCJfaGFuZGxlSW1hZ2VDbGljayIsIl9zZXRFdmVudExpc3RlbmVycyIsIl9pbnNlcnREYXRhIiwiX3RvZ2dsZURlbGV0ZUJ0bklmT3duZWQiLCJfY2hlY2tJZkxpa2VkIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNyYyIsImFsdCIsInRleHRDb250ZW50IiwiX3RvZ2dsZUxpa2UiLCJfY2xpY2tSZW1vdmUiLCJmb3JFYWNoIiwibGlrZSIsIl9ibGFja2VuTGlrZSIsInN0eWxlIiwiZGlzcGxheSIsIl9jcmVhdGVDYXJkIiwiRm9ybVZhbGlkYXRvciIsInZhbGlkYXRpb25PYmplY3QiLCJfdmFsaWRhdGlvbkRhdGEiLCJfdmFsaWRhdGlvbk9iamVjdCIsIl9zdWJtaXR0aW5nQnV0dG9uIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfc2V0RXZlbnRMaXN0ZW5lciIsImV2ZXJ5IiwiaW5wdXRFbGVtZW50IiwidmFsdWUiLCJfdG9nZ2xlU3VibWl0U3RhdGUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwibmFtZSIsIl9jaGVja0lmQWxsSW5wdXRJc1ZhbGlkIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiUG9wdXAiLCJzZWxlY3RvciIsIl9zZWxlY3RvciIsIl9wb3B1cCIsIl9wb3B1cENsb3NlQnRuIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJ0YXJnZXQiLCJjdXJyZW50VGFyZ2V0IiwiY2xvc2UiLCJrZXkiLCJQb3B1cFdpdGhJbWFnZSIsImltZ1NyYyIsImltZ0FsdCIsInRleHQiLCJTZWN0aW9uIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiaXRlbXMiLCJpdGVtIiwicG9zIiwicHJlcGVuZCIsImFwcGVuZCIsIlBvcHVwV2l0aEZvcm0iLCJvcGVuQ2FsbGJhY2siLCJzdWJtaXRDYWxsYmFjayIsIl9vcGVuQ2FsbGJhY2siLCJfc3VibWl0Q2FsbGJhY2siLCJfZm9ybSIsIl9mb3JtSW5wdXRzIiwicHJldmVudERlZmF1bHQiLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJuZXdTdWJtaXRIYW5kZWxlciIsInJlc2V0IiwiaW5wdXRWYWx1ZXMiLCJmb3JtSW5wdXQiLCJ2YWwiLCJVc2VySW5mbyIsInByb2ZpbGVOYW1lU2VsIiwicHJvZmlsZUpvYlNlbCIsInByb2ZpbGVJbWFnZVNlbCIsIl9wcm9maWxlTmFtZSIsIl9wcm9maWxlSm9iIiwiX3Byb2ZpbGVJbWciLCJqb2IiLCJiYXNlVXJsIiwiaGVhZGVycyIsIl9iYXNlVXJsIiwiX2hlYWRlcnMiLCJfdG9rZW4iLCJhdXRob3JpemF0aW9uIiwiZmV0Y2giLCJfY2hlY2tSZXNwb25zZSIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiYWJvdXQiLCJwbGFjZSIsImxpbmsiLCJhdmF0YXIiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZWRpdGluZ0J0biIsImFkZGluZ0NhcmRCdG4iLCJlZGl0UHJvZmlsZUltZyIsInBvcHVwRWRpdFByb2ZpbGVJbWciLCJmb3JtSW5wdXRQcm9maWxlSW1nIiwiZWRpdFByb2ZpbGVJbWdGb3JtIiwic3VibWl0UHJvZmlsZUltZ0J0biIsInBvcHVwRWRpdENhcmQiLCJlZGl0aW5nRm9ybSIsImlucHV0TmFtZSIsImlucHV0Sm9iIiwic3VibWl0RWRpdEJ0biIsInBvcHVwQWRkQ2FyZCIsImFkZGluZ0Zvcm0iLCJzdWJtaXRBZGRCdG4iLCJjYXJkc0NvbnRhaW5lclNlbCIsImVkaXRpbmdGb3JtVmFsaWRhdG9yIiwiYWRkaW5nRm9ybVZhbGlkYXRvciIsInVwZGF0aW5nSW1hZ2VGb3JtVmFsaWRhdG9yIiwic3VibWl0Q2FyZERlbGV0aW9uIiwiY2FyZHNMaXN0IiwiZW5hYmxlVmFsaWRhdGlvbiIsInVzZXJJbmZvIiwiYWxsIiwiZ2V0UHJvZmlsZURhdGEiLCJnZXRJbml0aWFsQ2FyZHMiLCJwcm9maWxlRGF0YSIsImluaXRpYWxDYXJkcyIsInNldFVzZXJJbmZvIiwic2V0VXNlckltYWdlIiwiY2FyZEl0ZW0iLCJvd25lciIsImNhcmQiLCJjcmVhdGVDYXJkIiwiYWRkSXRlbSIsInJlbmRlckl0ZW1zIiwic2V0SW5pdGlhbENhcmRzIiwiY2F0Y2giLCJlcnIiLCJjb25zb2xlIiwibG9nIiwicG9wdXBXaXRoRWRpdEZvcm0iLCJ1c2VySW5mb0RhdGEiLCJnZXRVc2VySW5mbyIsInZhbGlkYXRlT25PcGVuIiwiaW5uZXJUZXh0Iiwic2V0UHJvZmlsZURhdGEiLCJmaW5hbGx5Iiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJwb3B1cFdpdGhBZGRDYXJkRm9ybSIsImFkZE5ld0NhcmQiLCJwb3B1cFdpdGhJbWFnZSIsInBvcHVwV2l0aENvbmZpcm1hdGlvbiIsInBvcHVwV2l0aFByb2ZpbGVJbWdFZGl0aW5nIiwic3VibWl0dGluZ0J1dHRvbiIsInVwZGF0ZVByb2ZpbGVJbWFnZSIsIm9wZW4iLCJjaGFuZ2VTdW1iaXRIYW5kbGVyIiwiZGVsZXRlQ2FyZCIsImdldENhcmQiXSwic291cmNlUm9vdCI6IiJ9